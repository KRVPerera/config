#+title: Linux
#+author: KRV Perera
#+email: rukshan.viduranga@gmail.com

* TOP
:PROPERTIES:
:CUSTOM_ID: TOP
:END:
[[file:krvperera.org][HOME]] [[file:office.org][OFFICE]] [[file:EldenRing.org][Elden Ring]] [[file:country.org][Country]] [[file:org-mode-reference-in.org][HotKeys]] [[BOTTOM][BOTTOM]]

* Survery
- lshw
- lspci
- lsusb
- lsbk
- lscpu
- lsdev

- hdparm
- proc, dev, sys
- inb, outb

- /usr/src/linux-headers-5.15.0-27/include/uapi/asm-generic
  - unistd.h

** dmesg
    /var/log/messages
    dmesg | grep command
    journalctl -t kernel
** proc
interrupts

* BOOT

** custom boot entry

#+BEGIN_SRC bash
#!/bin/sh
exec tail -n +3 $0
# This file provides an easy way to add custom menu entries.  Simply type the
# menu entries you want to add after this comment.  Be careful not to change
# the 'exec tail' line above.

menuentry 'Custom Linux Boot Entry Experiment' --class ubuntu --class gnu-linux --class gnu --class os $menuentry_id_option 'gnulinux-simple-2f08e4ee-1c5a-4fc3-9b18-ebaa55ded15c' {
     recordfail
     load_video
     gfxmode $linux_gfx_mode
     insmod gzio
     if [ x$grub_platform = xxen ]; then insmod xzio; insmod lzopio; fi
     insmod part_gpt
     insmod ext2
     set root='hd0,gpt3'
     if [ x$feature_platform_search_hint = xy ]; then
       search --no-floppy --fs-uuid --set=root --hint-bios=hd0,gpt3 --hint-efi=hd0,gpt3 --hint-baremetal=ahci0,gpt3  2f08e4ee-1c5a-4fc3-9b18-ebaa55ded15c
     else
       search --no-floppy --fs-uuid --set=root 2f08e4ee-1c5a-4fc3-9b18-ebaa55ded15c
     fi
     linux   /boot/vmlinuz-5.15.0-27-generic root=UUID=2f08e4ee-1c5a-4fc3-9b18-ebaa55ded15c ro initcall_debug quiet splash $vt_handoff
    initrd  /boot/initrd.img-5.15.0-27-generic
}

#+END_SRC

#+BEGIN_SRC bash
sudo grub-mkconfig -o /boot/grub/grub.cfg
#+END_SRC

** My First module

*** Install Dependencies

#+BEGIN_SRC bash
sudo apt-get install build-essential linux-headers-`uname -r`
#+END_SRC

*** make-module.sh

#+BEGIN_SRC bash
#!/bin/bash
make -C /lib/modules/$(uname -r)/build M=$PWD modules
#+END_SRC

*** Makefile

#+BEGIN_SRC Makefile
obj-m: lab.o
#+END_SRC

*** lab.c

#+BEGIN_SRC c
#include <linux/module.h>
#include <linux/init.h>
#include <linux/sched.h>

MODULE_AUTHOR("Rukshan Perera");
MODULE_DESCRIPTION("My first module");

int my_init_module(void) {
    printk("hello from your kernel module\n");
}

void my_cleanup_module(void) {
    printk("goodbye from your kernel module\n");
}

module_exit(my_cleanup_module);
module_init(my_init_module);
MODULE_LICENSE("GPL");
#+END_SRC

*** run.sh

#+BEGIN_SRC bash
#!/bin/bash
make -C /lib/modules/$(unbame -r)/build M=$PWD modules
sudo insmod lab.koala
sudo dmesg | tail
lsmod | grep lab
sudo rmmod lab
sudo dmesg | tail
#+END_SRC

*** modinfo

modinfo -p / -a / -d

*** Parameters

#+BEGIN_SRC c

#include <linux/module.h>
#include <linux/init.h>
#include <linux/sched.h>

MODULE_AUTHOR("Rukshan Perera");
MODULE_DESCRIPTION("My first module");

static int number = 24601;
static char* word = "blueberry";

module_param(number, int , S_IRUGO);
MODULE_PARM_DESC(number, "A sample integer modifiable parameter");

module_param(word, charp , S_IRUGO);
MODULE_PARM_DESC(number, "A sample string modifiable parameter");

int my_init_module(void) {
    printk("hello from your kernel module\n");
}

void my_cleanup_module(void) {
    printk("goodbye from your kernel module\n");
}

module_exit(my_cleanup_module);
module_init(my_init_module);
MODULE_LICENSE("GPL");
#+END_SRC

**** change parameters
#+BEGIN_SRC bash
sudo insmod lab.ko number=9988 word="hotdog"
#+END_SRC

* Source code
- CentOS
  yumdownloader -source kernel

- Ubuntu
  git clone git://kernel.ubuntu.com/ubuntu/ubuntu-release-codename/git

 - RPM based
   rpm -i kernel*.rpm
   cd ~/rpmbuild/SPECS
//
   rpmbuild -bp kernel.spec
   cd ../BUILD
   ls

** make help

clean, mrproper, distclean


* [[https://wiki.ubuntu.com/Kernel/BuildYourOwnKernel][BuildYourOwnKernel]]

Official kernel source : kernel.org/pub/linux/kernel

** commands
kernel version - hostnamectl, cat /proc/version , uname -r
release name - lsb_release -a

#+BEGIN_SRC bash
sudo apt-get build-dep linux linux-image-$(uname -r)
sudo apt-get install libncurses-dev gawk flex bison openssl libssl-dev dkms libelf-dev libudev-dev libpci-dev libiberty-dev autoconf
sudo apt-get install git
lsb_release -a
apt-get source linux-image-unsigned-$(uname -r)
git clone git://kernel.ubuntu.com/ubuntu/ubuntu-jammy.git // did not work
#+END_SRC

*** /etc/apt/sources.list

#+BEGIN_SRC sh
deb-src http://archive.ubuntu.com/ubuntu disco main
deb-src http://archive.ubuntu.com/ubuntu disco-updates main
#+END_SRC

* BOTTOM
:PROPERTIES:
:CUSTOM_ID: BOTTOM
:END:
[[#TOP][TOP]]
